
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.security.Key;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hp
 */
public class RegisterForm extends javax.swing.JFrame {

    /**
     * Creates new form RegisterForm
     */
    public RegisterForm() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
StringBuilder sbf = new 
                       StringBuilder(""); 
					   String str =null;
                                           StringBuilder sgf = new 
                       StringBuilder(""); 
                                          
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelClose = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelMin = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField_PASS = new javax.swing.JPasswordField();
        jTextField_UN = new javax.swing.JTextField();
        jPasswordField_REPASS = new javax.swing.JPasswordField();
        jButton_CANCEL = new javax.swing.JButton();
        jLabelRegister = new javax.swing.JLabel();
        jButton_Register_ = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(248, 148, 6));

        jLabelClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("X");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Register");

        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setText("-");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(446, Short.MAX_VALUE)
                .addComponent(jLabelMin)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose)
                .addGap(21, 21, 21))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(jLabel2)
                    .addContainerGap(326, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMin, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabelClose))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(236, 240, 241));
        jLabel4.setText("Username:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("password:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("re-type password:");

        jPasswordField_PASS.setBackground(new java.awt.Color(204, 204, 255));
        jPasswordField_PASS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPasswordField_PASS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField_PASSKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField_PASSKeyTyped(evt);
            }
        });

        jTextField_UN.setBackground(new java.awt.Color(108, 122, 137));
        jTextField_UN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField_UN.setForeground(new java.awt.Color(228, 241, 254));

        jPasswordField_REPASS.setBackground(new java.awt.Color(108, 122, 137));
        jPasswordField_REPASS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPasswordField_REPASS.setForeground(new java.awt.Color(228, 241, 254));
        jPasswordField_REPASS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField_REPASSKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField_REPASSKeyTyped(evt);
            }
        });

        jButton_CANCEL.setBackground(new java.awt.Color(242, 38, 19));
        jButton_CANCEL.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_CANCEL.setForeground(new java.awt.Color(255, 255, 255));
        jButton_CANCEL.setText("Cancel");
        jButton_CANCEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CANCELActionPerformed(evt);
            }
        });

        jLabelRegister.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelRegister.setForeground(new java.awt.Color(255, 255, 255));
        jLabelRegister.setText("click here to login");
        jLabelRegister.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegisterMouseClicked(evt);
            }
        });

        jButton_Register_.setBackground(new java.awt.Color(0, 0, 255));
        jButton_Register_.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Register_.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Register_.setText("Register");
        jButton_Register_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Register_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jPasswordField_REPASS, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jButton_CANCEL, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Register_, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(173, 173, 173)
                    .addComponent(jPasswordField_PASS, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(75, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(173, 173, 173)
                    .addComponent(jTextField_UN, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(74, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(171, 171, 171)
                    .addComponent(jLabelRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(203, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel4)
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordField_REPASS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_Register_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_CANCEL, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addContainerGap(105, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(98, 98, 98)
                    .addComponent(jPasswordField_PASS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(233, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addComponent(jTextField_UN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(284, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(263, 263, 263)
                    .addComponent(jLabelRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(68, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 81, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 362, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked

        System.exit(0);
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked

        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked

    private void jButton_CANCELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CANCELActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton_CANCELActionPerformed

    private void jLabelRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegisterMouseClicked
        LoginForm lgf = new LoginForm();
        lgf.setVisible(true);
        lgf.pack();
        lgf.setLocationRelativeTo(null);
        lgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jLabelRegisterMouseClicked

    private void jButton_Register_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Register_ActionPerformed
        // TODO add your handling code here:
        String uname = jTextField_UN.getText();
         String ss = sbf.toString();
         String rr = sgf.toString();
					 
        
         String  re_pass ;
        re_pass = rr;
          
        
            String text = ss;
            String key = "Bar12345Bar12345"; // 128 bit key
            // Create key and cipher
            try{
            Key aesKey = new SecretKeySpec(key.getBytes(), "AES");
            Cipher cipher = Cipher.getInstance("AES");
            // encrypt the text
            cipher.init(Cipher.ENCRYPT_MODE, aesKey);
            byte[] encrypted = cipher.doFinal(text.getBytes());

            StringBuilder sb = new StringBuilder();
            for (byte b: encrypted) {
                sb.append((char)b);
            }

            // the encrypted String
            String enc = sb.toString();
            String pass=enc;

       
         
         if(uname.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Add A Username");
        }
        
        else if(pass.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Add A Password");
        }
      /*  else if(!pass.equals(re_pass))
        {
            JOptionPane.showMessageDialog(null, "Retype The Password Again");
        }
        else if(checkUsername(uname))
        {
            JOptionPane.showMessageDialog(null, "This Username Already Exist");
        }*/
        
        else{
        
         PreparedStatement ps;
         String query  = "INSERT INTO users (u_name,u_pass) values (?,?)";      
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            
            ps.setString(1,uname);
            ps.setString(2,pass);
            
            if(ps.executeUpdate() > 0)
            {
                 JOptionPane.showMessageDialog(null, "New User Add");
            }
        } catch (SQLException ex) {
            Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
          }
        catch(Exception e) 
        {
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_jButton_Register_ActionPerformed

    private void jPasswordField_PASSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_PASSKeyTyped
        // TODO add your handling code here:
        char keyChar = evt.getKeyChar();
        if (keyChar == 'a') {
          
		  sbf.append('a');
        }
		if (keyChar == 'A') {
          
		  sbf.append('A');
        }
		switch(keyChar)
		{
			case 'c' :
            
			sbf.append('c');
			break;
	
         case 'd' :
		
		 sbf.append('d');
		 break;
         case 'e' :
           
			sbf.append('e');		   
            break;
         case 'f' :
             
			sbf.append('f');
			break;
         case 'g' :
           
			sbf.append('g');
				break;
			case 'h' :

			sbf.append('h');
            break;
			case 'i' :
            
			sbf.append('i');
            break;
			case 'j' :
  
			sbf.append('j');
            break;
			case 'k' :
           
			sbf.append('k');
            break;
			case 'l' :
          
			sbf.append('l');
            break;
			case 'm' :
           
			sbf.append('m');
            break;
			case 'n' :
            
			sbf.append('n');
            break;
			case 'o' :
          
			sbf.append('o');
            break;
			case 'p' :
         
			sbf.append('p');
            break;
			case 'q' :
           
			sbf.append('q');
            break;
			case 'r' :
            
			sbf.append('r');
            break;
			case 's' :
            
			sbf.append('s');
            break;
			case 't' :
           
			sbf.append('t');
            break;
			case 'u' :
           
			sbf.append('u');
            break;
			case 'v' :
             
			sbf.append('v');
            break;
			case 'w' :
            
			sbf.append('w');
            break;
			case 'x' :
          
			sbf.append('x');
            break;
			case 'y' :
           
			sbf.append('y');
            break;
			case 'z' :
         
			sbf.append('z');
			case 'A' :
            
			sbf.append('A');
            break;
			case 'B' :
  
			sbf.append('B');
            break;
			case 'C' :
           
			sbf.append('C');
            break;
			case 'D' :
          
			sbf.append('D');
            break;
			case 'E' :
           
			sbf.append('E');
            break;
			case 'F' :
            
			sbf.append('F');
            break;
			case 'G' :
          
			sbf.append('G');
            break;
		     case 'H' :
            
			sbf.append('H');
            break;
			case 'I' :
  
			sbf.append('I');
            break;
			case 'J' :
           
			sbf.append('J');
            break;
			case 'K' :
          
			sbf.append('K');
            break;
			case 'L' :
           
			sbf.append('L');
            break;
			case 'M' :
            
			sbf.append('M');
            break;
			case 'N' :
          
			sbf.append('N');
            break;
		    case 'O' :
            
			sbf.append('O');
            break;
			case 'P' :
  
			sbf.append('P');
            break;
			case 'Q' :
           
			sbf.append('Q');
            break;
			case 'R' :
          
			sbf.append('R');
            break;
			case 'S' :
           
			sbf.append('S');
            break;
			case 'T' :
            
			sbf.append('T');
            break;
			case 'U' :
          
			sbf.append('U');
            break;
           
			case 'V' :
  
			sbf.append('V');
            break;
			case 'W' :
           
			sbf.append('W');
            break;
			case 'X' :
          
			sbf.append('X');
            break;
			case 'Y' :
           
			sbf.append('Y');
            break;
			case 'Z' :
            
			sbf.append('Z');
            break;
			case '&' :
          
			sbf.append('&');
			case '~' :
            
			sbf.append('~');
            break;
			case '!' :
  
			sbf.append('!');
            break;
			case '#' :
           
			sbf.append('#');
            break;
			case '$' :
          
			sbf.append('$');
            break;
			case '%' :
           
			sbf.append('%');
            break;
			case '^' :
            
			sbf.append('^');
            break;
			case '*' :
          
			sbf.append('*');
            break;
			case '(' :
            
			sbf.append('(');
            break;
			case ')' :
  
			sbf.append(')');
            break;
			case '_' :
           
			sbf.append('_');
            break;
			case '+' :
          
			sbf.append('+');
            break;
			case '=' :
           
			sbf.append('=');
            break;
			case '-' :
            
			sbf.append('-');
            break;
			case '`' :
          
			sbf.append('`');
            break;
			case '[' :
            
			sbf.append('[');
            break;
			case ']' :
  
			sbf.append(']');
            break;
			
			case ';' :
          
			sbf.append(';');
            break;
			
           
			
         
         
		
         

         			
         
			case '1'  :
            
			sbf.append('1');
            break;
                }
    }//GEN-LAST:event_jPasswordField_PASSKeyTyped

    private void jPasswordField_PASSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_PASSKeyPressed
        // TODO add your handling code here:
        int keyCode = evt.getKeyCode();
        if (keyCode == 66) {
          
		  sbf.append('b');
        }
		if (keyCode == KeyEvent.VK_BACK_SPACE)
		{
			System.out.println("You Typed $");
			sbf.append(KeyEvent.VK_UP);
		}
		
				if (keyCode == KeyEvent.VK_ENTER )
				{
					System.out.println( sbf); 
					
      }
	  
    }//GEN-LAST:event_jPasswordField_PASSKeyPressed

    private void jPasswordField_REPASSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_REPASSKeyPressed
        // TODO add your handling code here:
        int keyCode = evt.getKeyCode();
        if (keyCode == 66) {
          
		  sgf.append('b');
        }
		if (keyCode == KeyEvent.VK_BACK_SPACE)
		{
			System.out.println("You Typed $");
			sgf.append(KeyEvent.VK_UP);
		}
		
				if (keyCode == KeyEvent.VK_ENTER )
				{
					System.out.println( sgf); 
					
      }
	  
    }//GEN-LAST:event_jPasswordField_REPASSKeyPressed

    private void jPasswordField_REPASSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_REPASSKeyTyped
        // TODO add your handling code here:
        char keyChar = evt.getKeyChar();
        if (keyChar == 'a') {
          
		  sgf.append('a');
        }
		if (keyChar == 'A') {
          
		  sgf.append('A');
        }
		switch(keyChar)
		{
			case 'c' :
            
			sgf.append('c');
			break;
	
         case 'd' :
		
		 sgf.append('d');
		 break;
         case 'e' :
           
			sgf.append('e');		   
            break;
         case 'f' :
             
			sgf.append('f');
			break;
         case 'g' :
           
			sgf.append('g');
				break;
			case 'h' :

			sgf.append('h');
            break;
			case 'i' :
            
			sgf.append('i');
            break;
			case 'j' :
  
			sgf.append('j');
            break;
			case 'k' :
           
			sgf.append('k');
            break;
			case 'l' :
          
			sgf.append('l');
            break;
			case 'm' :
           
			sgf.append('m');
            break;
			case 'n' :
            
			sgf.append('n');
            break;
			case 'o' :
          
			sgf.append('o');
            break;
			case 'p' :
         
			sgf.append('p');
            break;
			case 'q' :
           
			sgf.append('q');
            break;
			case 'r' :
            
			sbf.append('r');
            break;
			case 's' :
            
			sgf.append('s');
            break;
			case 't' :
           
			sgf.append('t');
            break;
			case 'u' :
           
			sgf.append('u');
            break;
			case 'v' :
             
			sgf.append('v');
            break;
			case 'w' :
            
			sgf.append('w');
            break;
			case 'x' :
          
			sgf.append('x');
            break;
			case 'y' :
           
			sgf.append('y');
            break;
			case 'z' :
         
			sgf.append('z');
			case 'A' :
            
			sgf.append('A');
            break;
			case 'B' :
  
			sgf.append('B');
            break;
			case 'C' :
           
			sgf.append('C');
            break;
			case 'D' :
          
			sgf.append('D');
            break;
			case 'E' :
           
			sgf.append('E');
            break;
			case 'F' :
            
			sgf.append('F');
            break;
			case 'G' :
          
			sgf.append('G');
            break;
		     case 'H' :
            
			sgf.append('H');
            break;
			case 'I' :
  
			sgf.append('I');
            break;
			case 'J' :
           
			sgf.append('J');
            break;
			case 'K' :
          
			sgf.append('K');
            break;
			case 'L' :
           
			sgf.append('L');
            break;
			case 'M' :
            
			sgf.append('M');
            break;
			case 'N' :
          
			sgf.append('N');
            break;
		    case 'O' :
            
			sgf.append('O');
            break;
			case 'P' :
  
			sgf.append('P');
            break;
			case 'Q' :
           
			sgf.append('Q');
            break;
			case 'R' :
          
			sgf.append('R');
            break;
			case 'S' :
           
			sgf.append('S');
            break;
			case 'T' :
            
			sgf.append('T');
            break;
			case 'U' :
          
			sgf.append('U');
            break;
           
			case 'V' :
  
			sgf.append('V');
            break;
			case 'W' :
           
			sgf.append('W');
            break;
			case 'X' :
          
			sgf.append('X');
            break;
			case 'Y' :
           
			sgf.append('Y');
            break;
			case 'Z' :
            
			sgf.append('Z');
            break;
			case '&' :
          
			sgf.append('&');
			case '~' :
            
			sgf.append('~');
            break;
			case '!' :
  
			sgf.append('!');
            break;
			case '#' :
           
			sgf.append('#');
            break;
			case '$' :
          
			sgf.append('$');
            break;
			case '%' :
           
			sgf.append('%');
            break;
			case '^' :
            
			sgf.append('^');
            break;
			case '*' :
          
			sgf.append('*');
            break;
			case '(' :
            
			sgf.append('(');
            break;
			case ')' :
  
			sgf.append(')');
            break;
			case '_' :
           
			sgf.append('_');
            break;
			case '+' :
          
			sgf.append('+');
            break;
			case '=' :
           
			sgf.append('=');
            break;
			case '-' :
            
			sgf.append('-');
            break;
			case '`' :
          
			sgf.append('`');
            break;
			case '[' :
            
			sgf.append('[');
            break;
			case ']' :
  
			sgf.append(']');
            break;
			
			case ';' :
          
			sgf.append(';');
            break;
			
           
			
         
         
		
         

         			
         
			case 1  :
            
			sgf.append('1');
            break;
                            case 2 :
          
			sgf.append('2');
			case 3 :
            
			sgf.append('3');
            break;
			case 4 :
  
			sgf.append('4');
            break;
			case 5 :
           
			sgf.append('5');
            break;
			case 6 :
          
			sgf.append('6');
            break;
			case 7 :
           
			sgf.append('7');
            break;
			case 8 :
            
			sgf.append('8');
            break;
			case 9 :
          
			sgf.append('9');
            break;
			case 0 :
            
			sgf.append('0');
            break;
			
                }
			
    }//GEN-LAST:event_jPasswordField_REPASSKeyTyped
      
    public boolean checkUsername(String username)
    {
        PreparedStatement ps;
        ResultSet rs;
        boolean checkUser = false;
       String query  =  "select * from users where u_name = ? and u_pass = ?";
        
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, username);
            
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                checkUser = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
        }
         return checkUser;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterForm().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_CANCEL;
    private javax.swing.JButton jButton_Register_;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JLabel jLabelRegister;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField_PASS;
    private javax.swing.JPasswordField jPasswordField_REPASS;
    private javax.swing.JTextField jTextField_UN;
    // End of variables declaration//GEN-END:variables
}
